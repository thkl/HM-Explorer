{"version":3,"file":"store.js","sources":["src/store.js"],"sourcesContent":["const electron = require('electron');\nconst path = require('path');\nconst fs = require('fs');\n\nclass Store {\n  constructor(opts) {\n    // Renderer process has to get `app` module via `remote`, whereas the main process can get it directly\n    // app.getPath('userData') will return a string of the user's app data directory path.\n    const userDataPath = (electron.app || electron.remote.app).getPath('userData');\n    // We'll use the `configName` property to set the file name and path.join to bring it all together as a string\n    this.path = path.join(userDataPath, opts.configName + '.json');\n    \n    this.data = parseDataFile(this.path, opts.defaults);\n  }\n  \n  // This will just return the property on the `data` object\n  get(key) {\n    return this.data[key];\n  }\n  \n  // ...and this will set it\n  set(key, val) {\n    this.data[key] = val;\n    // Wait, I thought using the node.js' synchronous APIs was bad form?\n    // We're not writing a server so there's not nearly the same IO demand on the process\n    // Also if we used an async API and our app was quit before the asynchronous write had a chance to complete,\n    // we might lose that data. Note that in a real app, we would try/catch this.\n    fs.writeFileSync(this.path, JSON.stringify(this.data));\n  }\n}\n\nfunction parseDataFile(filePath, defaults) {\n  // We'll try/catch it in case the file doesn't exist yet, which will be the case on the first application run.\n  // `fs.readFileSync` will return a JSON string which we then parse into a Javascript object\n  try {\n    return JSON.parse(fs.readFileSync(filePath));\n  } catch(error) {\n    // if there was some kind of error, return the passed in defaults instead.\n    return defaults;\n  }\n}\n\n// expose the class\nmodule.exports = Store;"],"names":[],"mappings":";;AAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEzB,MAAM,KAAK,CAAC;EACV,WAAW,CAAC,IAAI,EAAE;;;IAGhB,MAAM,YAAY,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;;IAE/E,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC;;IAE/D,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;GACrD;;;EAGD,GAAG,CAAC,GAAG,EAAE;IACP,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GACvB;;;EAGD,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE;IACZ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;;;;;IAKrB,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;GACxD;CACF;;AAED,SAAS,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE;;;EAGzC,IAAI;IACF,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;GAC9C,CAAC,MAAM,KAAK,EAAE;;IAEb,OAAO,QAAQ,CAAC;GACjB;CACF;;;AAGD,MAAM,CAAC,OAAO,GAAG,KAAK"}